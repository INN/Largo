/**
 * @group Color
 * @label Base Color (used for navbar, widget titles, etc.)
 * @type color
 * @default_value #2275bb
 */
/**
 * @group Color
 * @label Header/Footer Color
 * @type color
 * @default_value #222
 */
/**
 * @group Color
 * @label Pre-Footer Color
 * @type color
 * @default_value #ddd
 */
/**
 * @group Color
 * @label Color of links
 * @type color
 * @default_value #2275bb
 */
/**
 * @group Color
 * @label Hover color of links
 * @type color
 * @default_value #2275bb
 */
/**
 * @group Color
 * @label Background color of post meta boxes (author bio, related posts, etc.)
 * @type color
 * @default_value #fff
 */
/**
 * @group Basics
 * @label Body Background Color
 * @type color
 * @default_value #fff
 */
/**
 * @group Basics
 * @label Page Background Color
 * @type color
 * @default_value #fff
 */
/**
 * @group Basics
 * @label Text Color
 * @type color
 * @default_value #333
 */
/**
 * @group Basics
 * @label Default Vertical Spacing
 * @type pixels
 * @default_value 24px
 */
/**
 * @group Typography
 * @label Sans Font Family
 * @type text
 * @default_value "Helvetica Neue", Helvetica, Arial, sans-serif
 */
/**
 * @group Typography
 * @label Serif Font Family
 * @type text
 */
/**
 * @group Typography
 * @label Base Font Size
 * @type pixels
 */
/**
 * @group Typography
 * @label Sans Font Family
 * @type dropdown
 * @options @serifFontFamily|@sansFontFamily
 * @default_value @serifFontFamily
 */
/**
 * @group Typography
 * @label Base Line Height
 * @type text
 * @default_value 1.5
 */
#homepage-featured {
  margin-bottom: 24px;
  border: 1px solid #dddddd;
  border-bottom: 5px solid #dddddd;
  -webkit-border-radius: 8px;
  -moz-border-radius: 8px;
  border-radius: 8px;
}
#homepage-featured .top-story {
  padding: 10px 10px 24px;
}
#homepage-featured .top-story img {
  margin-bottom: 12px;
}
#homepage-featured .top-story h2 {
  font-size: 32px;
  margin-bottom: 12px;
  line-height: 1.1;
}
#homepage-featured .top-story p {
  font-size: 13.04px;
  margin-bottom: 12px;
}
#homepage-featured .top-story h4 {
  font-size: 14px;
  margin-bottom: 0;
}
#homepage-featured .sub-stories {
  padding: 10px 10px 10px 0;
}
#homepage-featured .sub-stories .story {
  border-bottom: 1px solid #dddddd;
  margin-bottom: 12px;
  overflow: hidden;
}
#homepage-featured .sub-stories h5.top-tag {
  font-size: 10.672px;
  margin-bottom: 0;
  font-weight: bold;
}
#homepage-featured .sub-stories h3 {
  font-size: 16px;
  margin-bottom: 6px;
  line-height: 1.2;
}
#homepage-featured .sub-stories p {
  font-size: 10.672px;
  margin-bottom: 12px;
}
#homepage-featured .sub-stories p a {
  display: none;
}
#homepage-featured .sub-stories h4.subhead {
  font-size: 13.04px;
  text-transform: uppercase;
  margin-bottom: 6px;
}
#homepage-featured .sub-stories h5 {
  font-size: 13.04px;
  margin-bottom: 6px;
  font-weight: normal;
}
@media (min-width: 769px) and (max-width: 979px) {
  #homepage-featured .sub-stories h4,
  #homepage-featured .sub-stories h5 {
    display: none;
  }
}
@media (max-width: 768px) {
  #homepage-featured .top-story,
  #homepage-featured .sub-stories {
    clear: both;
    width: 100%;
    padding: 10px;
    margin: 0;
  }
  #homepage-featured .sub-stories {
    border-top: 1px solid #dddddd;
  }
}
/*# sourceMappingURL=data:application/json;base64, */